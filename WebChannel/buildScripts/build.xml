<project name="Web Channel Cvs Fetch Customization and Build Ear" default="ear">

	<property name="swc" value="swc" />
	<property file="buildear.properties" />
	<property name="resources_dir" value="${devhome}/resources" />

	<property name="target.runtime.dir" value="${cvs.fetch.dir}/${cvs.abstract.module}/buildScripts/build/runtime" />
	<property name="target.webapp.dir" value="${cvs.fetch.dir}/${cvs.abstract.module}/buildScripts/build/webapp" />
	<property name="target.webapp.dir.mashups" value="${target.webapp.dir}/mashupxmls/webchannel" />
	<property name="source.3rdParty.jar.path" value="${cvs.fetch.dir}/${cvs.abstract.module}/buildScripts/jars/reportingjars" />
	<property name="sic.src.dir" value="" />

	<condition property="runtime.present" value="true">
		<length string="${runtime}" when="greater" length="0" trim="true" />
	</condition>

	<condition property="sic.present" value="true">
		<length string="${sic.src.dir}" when="greater" length="0" trim="true" />
	</condition>

	<target name="cvs-fetch" description="Fetches from CVS">
		<!-- First create the CVS fetch directory -->
		<mkdir dir="${cvs.fetch.dir}" />
		<cvs cvsRoot=":pserver:${cvs.user}:${cvs.pass}@${cvs.server}:${cvs.root}" package="${cvs.module.name}" dest="${cvs.fetch.dir}" />
	</target>

	<target name="-set-runtime-classpath" if="runtime.present">
		<echo message="Using runtime libraries present in ${runtime}." />

		<loadfile property="version.txt" srcfile="${runtime}/bin/version.txt" />
		<echo message="Building SWC Customization against Foundation ${version.txt}" />
		<path id="compile.classpath">
			<fileset dir="${cvs.fetch.dir}/${cvs.module.name}/buildscripts/jars">
				<include name="**/*.jar" />
			</fileset>

			<fileset dir="${cvs.fetch.dir}/${cvs.module.name}/main/webapp/WEB-INF/lib">
				<include name="**/*.jar" />
			</fileset>

			<fileset dir="${runtime}/jar">
				<include name="**/*.jar" />
			</fileset>
			<fileset dir="${runtime}/jar/commons_digester/1_8">
				<include name="**/*.jar" />
			</fileset>

			<fileset dir="${runtime}/jar/platform_afc/5_5">
				<include name="**/*.jar" />
			</fileset>

			<fileset dir="${runtime}/jar/platform_uifwk">
				<include name="**/*.jar" />
			</fileset>

			<fileset dir="${runtime}/jar/platform/5_5">
				<include name="**/*.jar" />
			</fileset>

			<fileset dir="${runtime}/jar/log4j/1_2_15">
				<include name="**/*.jar" />
			</fileset>

			<fileset dir="${runtime}/repository/eardata/platform/war/yfscommon">
				<include name="**/*.jar" />
			</fileset>

			<fileset dir="${runtime}/jar/platform_afc_ui_impl/5_5">
				<include name="**/*.jar" />
			</fileset>

			<fileset dir="${runtime}/jar/scecore/9.0">
				<include name="**/*.jar" />
			</fileset>

			<fileset dir="${runtime}/jar">
				<include name="**/*.jar" />
			</fileset>

			<fileset dir="${runtime}/jar/commons_collections/3_2">
				<include name="**/*.jar" />
			</fileset>

			<fileset dir="${runtime}/jar/COM_Add-in/9.0_9.0">
				<include name="**/*.jar" />
			</fileset>
			
			<fileset dir="${runtime}/jar/xpedxreportingjars/1.0">
				<include name="**/*.jar" />
			</fileset>

		</path>
		<pathconvert property="webxml.classpath.ref" refid="compile.classpath" />
	</target>
	
	<target name="install3rdparty" description="Installs all required 3rd party jars" depends="cvs-fetch">

		<exec executable="${runtime}/bin/${install3rdPartyCommand}" failonerror="true">
			<arg value="xpedxreportingjars"/>
			<arg value="1.0"/>
			<arg value="-j"/>
			<!--<arg value="${source.3rdParty.jar.path}/*.jar"/>-->
			<arg value="${source.3rdParty.jar.path}/activation-1.1.jar ${source.3rdParty.jar.path}/adv_ivcdzview.jar ${source.3rdParty.jar.path}/AnalyticalReporting_en.jar ${source.3rdParty.jar.path}/AnalyticalReporting.jar ${source.3rdParty.jar.path}/asn1.jar ${source.3rdParty.jar.path}/biarengine.jar ${source.3rdParty.jar.path}/biplugins.jar ${source.3rdParty.jar.path}/boconfig.jar ${source.3rdParty.jar.path}/cafinstall.jar ${source.3rdParty.jar.path}/cdzlet.jar ${source.3rdParty.jar.path}/cecore.jar ${source.3rdParty.jar.path}/celib.jar ${source.3rdParty.jar.path}/ceplugins_client.jar ${source.3rdParty.jar.path}/ceplugins_core.jar ${source.3rdParty.jar.path}/ceplugins_cr.jar ${source.3rdParty.jar.path}/cereports.jar ${source.3rdParty.jar.path}/certj.jar ${source.3rdParty.jar.path}/cesdk.jar ${source.3rdParty.jar.path}/cesearch.jar ${source.3rdParty.jar.path}/cesession.jar ${source.3rdParty.jar.path}/cetaglib.jar ${source.3rdParty.jar.path}/ceutils.jar ${source.3rdParty.jar.path}/clientlogic.jar ${source.3rdParty.jar.path}/clientplugins.jar ${source.3rdParty.jar.path}/commons-configuration-1.2.jar ${source.3rdParty.jar.path}/commons-el.jar ${source.3rdParty.jar.path}/corbaidl.jar ${source.3rdParty.jar.path}/CRDBJavabeansServer.jar ${source.3rdParty.jar.path}/CRDBJavaServer.jar ${source.3rdParty.jar.path}/CRDBJavaServerCommon.jar ${source.3rdParty.jar.path}/CRDBJDBCServer.jar"/> 
			<arg value="-targetJVM"/>
			<arg value="APP"/>
		</exec>
		
		<exec executable="${runtime}/bin/${install3rdPartyCommand}" failonerror="true">
			<arg value="xpedxreportingjars"/>
			<arg value="1.0"/>
			<arg value="-j"/>
			<arg value="${source.3rdParty.jar.path}/CRDBSForceServer.jar ${source.3rdParty.jar.path}/CRDBXMLServer.jar ${source.3rdParty.jar.path}/credential.jar ${source.3rdParty.jar.path}/crlov.jar ${source.3rdParty.jar.path}/crlovexternal.jar ${source.3rdParty.jar.path}/crlovmanifest.jar ${source.3rdParty.jar.path}/CrystalCommon2.jar ${source.3rdParty.jar.path}/cs_bridge.jar ${source.3rdParty.jar.path}/diagnosticTool.jar ${source.3rdParty.jar.path}/dsws-bicatalog.jar ${source.3rdParty.jar.path}/dsws-biplatform.jar ${source.3rdParty.jar.path}/dsws-common.jar ${source.3rdParty.jar.path}/dsws-federator.jar ${source.3rdParty.jar.path}/dsws-publish.jar ${source.3rdParty.jar.path}/dsws-queryservice.jar ${source.3rdParty.jar.path}/dsws-reportengine.jar ${source.3rdParty.jar.path}/dsws-session.jar ${source.3rdParty.jar.path}/ebus405.jar ${source.3rdParty.jar.path}/encrypt.jar ${source.3rdParty.jar.path}/explorer_jdbc_en.jar ${source.3rdParty.jar.path}/explorer_jdbc.jar ${source.3rdParty.jar.path}/explorer_jsf.jar ${source.3rdParty.jar.path}/explorer_model_sdk.jar ${source.3rdParty.jar.path}/explorer_model.jar ${source.3rdParty.jar.path}/explorer_res_en.jar ${source.3rdParty.jar.path}/flash.jar ${source.3rdParty.jar.path}/freessl201.jar"/>
			<arg value="-targetJVM"/>
			<arg value="APP"/>
		</exec>
		
		<exec executable="${runtime}/bin/${install3rdPartyCommand}" failonerror="true">
			<arg value="xpedxreportingjars"/>
			<arg value="1.0"/>
			<arg value="-j"/>
			<arg value="${source.3rdParty.jar.path}/i18n4j.jar ${source.3rdParty.jar.path}/icu4j.jar ${source.3rdParty.jar.path}/JarDownloaderServlet.jar ${source.3rdParty.jar.path}/jdom-beta8.jar ${source.3rdParty.jar.path}/jsafe.jar ${source.3rdParty.jar.path}/jsf-api.jar ${source.3rdParty.jar.path}/jsf-impl.jar ${source.3rdParty.jar.path}/jstl.jar ${source.3rdParty.jar.path}/jtools.jar ${source.3rdParty.jar.path}/jzlib.jar ${source.3rdParty.jar.path}/keycodeDecoder.jar ${source.3rdParty.jar.path}/logging.jar ${source.3rdParty.jar.path}/MetafileRenderer.jar ${source.3rdParty.jar.path}/PlatformServices_en.jar ${source.3rdParty.jar.path}/pluginhelper.jar ${source.3rdParty.jar.path}/procJavaAdapter.jar ${source.3rdParty.jar.path}/procWebiPublishing.jar ${source.3rdParty.jar.path}/pub_common.jar ${source.3rdParty.jar.path}/ras21core.jar ${source.3rdParty.jar.path}/ras21proc.jar ${source.3rdParty.jar.path}/rasapp.jar ${source.3rdParty.jar.path}/rascore.jar ${source.3rdParty.jar.path}/rebean.common.jar ${source.3rdParty.jar.path}/rebean.fc.jar ${source.3rdParty.jar.path}/rebean.jar ${source.3rdParty.jar.path}/rebean.wi.jar ${source.3rdParty.jar.path}/REDynamicRecipients.jar ${source.3rdParty.jar.path}/repo_bridge.jar ${source.3rdParty.jar.path}/repo_proxy.jar"/>
			<arg value="-targetJVM"/>			
			<arg value="APP"/>
		</exec>
		
		<exec executable="${runtime}/bin/${install3rdPartyCommand}" failonerror="true">
			<arg value="xpedxreportingjars"/>
			<arg value="1.0"/>
			<arg value="-j"/>
			<arg value="${source.3rdParty.jar.path}/ReportPrinter.jar ${source.3rdParty.jar.path}/reporttemplate.jar ${source.3rdParty.jar.path}/ReportViewer.jar ${source.3rdParty.jar.path}/rpoifs.jar ${source.3rdParty.jar.path}/secSAPR3.jar ${source.3rdParty.jar.path}/serialization.jar ${source.3rdParty.jar.path}/sit.jar ${source.3rdParty.jar.path}/SL_plugins.jar ${source.3rdParty.jar.path}/sslj.jar ${source.3rdParty.jar.path}/standard.jar ${source.3rdParty.jar.path}/stax-api-1.0.1.jar ${source.3rdParty.jar.path}/struts.jar ${source.3rdParty.jar.path}/updatefrs.jar ${source.3rdParty.jar.path}/URIUtil.jar ${source.3rdParty.jar.path}/webapp_en.jar ${source.3rdParty.jar.path}/webapp.jar ${source.3rdParty.jar.path}/WebiServerPerf_idl.jar ${source.3rdParty.jar.path}/WebiServerPerfProxies.jar ${source.3rdParty.jar.path}/webreporting.jar ${source.3rdParty.jar.path}/webreporting-jsf.jar ${source.3rdParty.jar.path}/webutil_en.jar ${source.3rdParty.jar.path}/webutil.jar ${source.3rdParty.jar.path}/wi_srvadmin.jar ${source.3rdParty.jar.path}/wilog.jar ${source.3rdParty.jar.path}/wstk_java.jar ${source.3rdParty.jar.path}/xcelsius.jar ${source.3rdParty.jar.path}/xpp3.jar"/>
			<arg value="-targetJVM"/>
			<arg value="APP"/>
		</exec> 
	</target>
	
	
	<target name="-compile" depends="clean, -set-runtime-classpath" description="compile any changed java files">
		<echo message="-compile" />
		<mkdir dir="${target.webapp.dir}/temp/WEB-INF/classes" />
		<javac srcdir="${devhome}/java" destdir="${target.webapp.dir}/temp/WEB-INF/classes" debug="${compile.debug}" classpathref="compile.classpath" source="1.5" target="1.5" />
		<copy overwrite="true" todir="${target.webapp.dir}/temp/WEB-INF/classes">
			<fileset dir="${resources_dir}">
				<include name="com/**" />
				<include name="*.*" />
			</fileset>
		</copy>		
	</target>
	<target name="-build-ui-jar" depends="-compile">
		<echo message="-build-ui-jar ${target.webapp.dir}  " />
		<mkdir dir="${target.webapp.dir}/WEB-INF/lib" />
		<mkdir dir="${target.webapp.dir}/yfscommon" />
		<!-- Modified for customization script-->
		<jar destfile="${target.webapp.dir}/WEB-INF/lib/${cust.module.code}.jar">
			<fileset dir="${target.webapp.dir}/temp/WEB-INF/classes/">
				<include name="**/*" />
				<exclude name="com/sterlingcommerce/webchannel/config/**" />
				<exclude name="com/sterlingcommerce/webchannel/tools/mashup/**" />
				<exclude name="com/sterlingcommerce/webchannel/build/**" />
				<exclude name="com/sterlingcommerce/webchannel/xapi/**" />
			</fileset>
		</jar>
		<jar destfile="${target.webapp.dir}/WEB-INF/lib/${cust.module.code}_resourceBundles.jar">
			<fileset dir="${target.webapp.dir}/temp/WEB-INF/classes/">
				<include name="**/package.properties" />
			</fileset>
		</jar>
	</target>
	<target name="-updwebapp">
		<echo message="-updwebapp" />
		<delete dir="${target.webapp.dir}/temp" />
		<copy overwrite="true" todir="${target.webapp.dir.mashups}/extn/swc" failonerror="false">
			<fileset dir="${devhome}/webapp/custommashups">
				<include name="*/**" />
			</fileset>
		</copy>
		<copy overwrite="true" todir="${target.webapp.dir}">
			<fileset dir="${devhome}/webapp">
				<include name="*/**" />
				<exclude name="${devhome}/webapp/custommashups/**" />
			</fileset>
		</copy>	
		<!-- Copying tag files to the swc.war web-inf folder-->
		<copy overwrite="true" todir="${runtime}/repository/eardata/swc/war/WEB-INF">
			<fileset dir="${devhome}/webapp/WEB-INF">
				<include name="*.tld" />
			</fileset>
		</copy>
	</target>

	<target name="-updruntime" unless="devmode">
		<echo message="--updruntime" />
		<available type="file" file="${basedir}/../version.txt" property="swcversion.available" />
		<echo message="version.txt available? ${swcversion.available}" />
		<antcall target="-copyversionfile" />

	</target>

	<target name="-copyversionfile" if="swcversion.available">
		<echo message="---copyversionfile" />
		<copy overwrite="true" tofile="${target.runtime.dir}/files/bin/swcversion.txt" file="${basedir}/../version.txt" />
	</target>

	<target name="-copyresources" depends="-build-ui-jar">
		<echo message="----copyresources" />
		<antcall target="-updwebapp" />
		<antcall target="-updruntime" />
	</target>

	<target name="build" depends="-copyresources" unless="devmode">
		<echo message="----build" />
		<mkdir dir="${cvs.fetch.dir}/${cvs.module.name}/buildScripts/${cust.package.dir}/${cust.module.code}" />
		<jar destfile="${cvs.fetch.dir}/${cvs.abstract.module}/buildScripts/${cust.package.dir}/${cust.module.code}/${cust.module.package}.jar" update="false">
			<zipfileset dir="${target.webapp.dir}" excludes="WEB-INF/lib/${cust.module.code}.jar, yfscommon/**, WEB-INF/lib/${cust.module.code}_resourceBundles.jar" prefix="${module.code}/files/repository/eardata/${module.code}/war/" erroronmissingdir="false" />
			<zipfileset dir="${target.webapp.dir}" includes="yfscommon/${cust.module.code}ui.jar" prefix="${cust.module.code}/files/repository/eardata/config/war" erroronmissingdir="false" />
			<zipfileset dir="${target.webapp.dir}/WEB-INF/lib/" includes="${cust.module.code}.jar" prefix="${module.code}/jars/${cust.module.code}/1_0/" erroronmissingdir="false" />

			<zipfileset dir="${resources_dir}/" includes="DCL.xml" prefix="${module.code}/jars/" erroronmissingdir="false" />
		</jar>
		<copy file="${target.webapp.dir}/WEB-INF/lib/${cust.module.code}_resourceBundles.jar" todir="${cvs.fetch.dir}/${cvs.abstract.module}/buildScripts/${cust.package.dir}/${cust.module.code}" overwrite="true" failonerror="false" />
	</target>

	<target name="zip_source_code">

		<echo message="Zipping the source and the built webapp" />
		<zip destfile="SWC_CUST_src.zip" update="false">
			<fileset dir="${basedir}">
				<exclude name="SWC_src.zip" />
				<exclude name="SWC.jar" />
				<exclude name="swc_developer_reference_data.zip" />
			</fileset>
		</zip>
	</target>

	<target name="clean" depends="cvs-fetch">
		<echo message="cleanz" />
		<delete dir="${target.runtime.dir}" />
		<delete dir="${target.webapp.dir}" />
	</target>

	<target name="installcmd" depends="build">
		<echo message="running install service" />
		<exec executable="${runtime}/bin/${InstallService}">
			<arg value="${InstallServicePath}" />
		</exec>
	</target>

	<target name="ear" description="Builds EAR file for deployment" depends="installcmd">
		<echo message="building ear file" />
		<exec executable="${runtime}/bin/${buildEarCommand}">
			<arg value="-Dappserver=weblogic" />
			<arg value="-Ddevmode=false" />
			<arg value="-Dwarfiles=swc" />
			<arg value="-Dearfile=swc.ear" />
			<arg value="create-ear" />
			<arg value="-Dnowebservice=true" />
			<arg value="-Dnodocear=true" />
			<arg value="-Dnoejb=true" />
		</exec>

	</target>
</project>

