<?xml version="1.0" encoding="UTF-8"?>
<taglib xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
        http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
    version="2.0">
  <description>
    Tag library for Xpedx specific controls.
  </description>
  <tlib-version>1.0</tlib-version>
  <short-name>xpedx</short-name>
  <uri>xpedx</uri>

 <!-- breaedcrumb tags -->


	<tag>
		<description>
			This tag is used to bracket the part of the page where the serialized breadcrumb
			information would be automatically attached to all actions as a request parameters
			when they are resolved (as part of the query string). This tag needs to be used
			in combination with the other two tags "breadcrumb" and "breadcrumbDisplay"
		</description>
		<name>breadcrumbDisplay</name>
		<tag-class>com.sterlingcommerce.xpedx.webchannel.common.XPEDXBreadcrumbDisplayTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<description>
				Define the String to be displayed as the "root" (first breadcrumb) for the same
				display group. The display root is used to access previous breadcrumbs in different
				display group.
			</description>
			<name>displayRootName</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>
				The string to separate/delimit breadcrumbs.
			</description>
			<name>breadcrumbSeparator</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>
				Determine if a remove function is turn on and a link to remove each icon
				is displayed. Note that, the root and the last breadcrumb cannot be removed. Root
				is obvious since it is used to go back to the home or root page, or go back to previous
				breadcrumb in different group. To remvoe condition of the last breadcrumb, simply click
				the breadcrumb before it. Therefore there's no need to provide a redundant operation.
			</description>
			<name>removable</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description>
				OGNL expression to reference an image resource to be displayed as the remove icon or button
			</description>
			<name>removeIcon</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>
				Define the String to be displayed if no displayName can be derived from other places.
			</description>
			<name>defaultDisplayName</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
        <attribute>
            <description>
                Define the starting number to be used as tabindex in displayed anchors
            </description>
            <name>startTabIndex</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <type>java.lang.Integer</type>
        </attribute>
		<example>
		<![CDATA[
			...
			<s:url value='/removeButton.gif' id='rbtn'/>
			<wc:breadcrumbDisplay displayRootName='Home' breadcrumbSeparator='>' removable='true' removeIcon='#rbtn'/>
			...
		]]>
		</example>
	</tag>

	<tag>
		<description>
			This tag is used in Catalog-C3 page. The purpose is to reduce the number of lines in javascript and improve performance. 
		</description>
		<name>catalogResultInit</name>
		<tag-class>com.sterlingcommerce.xpedx.webchannel.catalog.XPEDXItemsDataTemplateTag</tag-class>
		<body-content>empty</body-content>
		<attribute>
			<description>
				The Item Element
			</description>
			<name>ItemElement</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<description>
				The base currency for item price.
			</description>
			<name>currency</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>        
		<example>
		<![CDATA[
			...
			<s:url value='/removeButton.gif' id='rbtn'/>
			<wc:catalogResultInit ItemElement='itemElement' WCContext='wcContext' currency='USD'/>
			...
		]]>
		</example>
	</tag>

	<tag>
	    <description>
	      Generates a pagination control fragment.
	    </description>
	    <name>flexpagectl</name>
	    <tag-class>com.sterlingcommerce.xpedx.webchannel.common.FlexPaginationTag</tag-class>
	    <body-content>empty</body-content>
	    <attribute>
	      <description>
	        The number of the current page. Control will suppress the link
	        for this page. This attribute takes an OGNL expression.
	      </description>
	      <name>currentPage</name>
	      <required>true</required>
	      <rtexprvalue>false</rtexprvalue>
	      <type>java.lang.String</type>
	    </attribute>
	    <attribute>
	      <description>
	        The number of the last page of the pageset, if available. If empty or
	        missing this is interpreted as meaning that there are more pages, but
	        the number is unknown. This attribute takes an OGNL expression.
	      </description>
	      <name>lastPage</name>
	      <required>false</required>
	      <rtexprvalue>false</rtexprvalue>
	      <type>java.lang.String</type>
	    </attribute>
	    <attribute>
	      <description>
	        A java.text.MessageFormat template for the url to be generated to
	        request a specified page. Tag will replace "{0}" with new page
	        number to generate URL. This attribute takes an OGNL expression.
	      </description>
	      <name>urlSpec</name>
	      <required>true</required>
	      <rtexprvalue>false</rtexprvalue>
	      <type>java.lang.String</type>
	    </attribute>
	    <attribute>
	      <description>
	        CSS class for the bounding html object generated for this
	        control. This is used for binding to CSS rules.
	      </description>
	      <name>cssClass</name>
	      <required>false</required>
	      <rtexprvalue>false</rtexprvalue>
	      <type>java.lang.String</type>
	    </attribute>
	    <attribute>
	      <description>
	        CSS class for the bounding html object generated for this
	        control. This is used for binding to CSS rules.
	      </description>
	      <name>id</name>
	      <required>false</required>
	      <rtexprvalue>false</rtexprvalue>
	      <type>java.lang.String</type>
	    </attribute>
	    <attribute>
	      <description>
	        Generates a control based on the assumption that there is a next page
	        but the total number of pages is unknown. Defaults to false. If this
	        value is set to true then the value of lastPage is ignored. If this
	        value
	        is false and the lastPage is undefined, then no control is generated.
	        This attribute takes an OGNL expression.
	      </description>
	      <name>isLastUnknown</name>
	      <required>false</required>
	      <rtexprvalue>false</rtexprvalue>
	      <type>java.lang.Boolean</type>
	    </attribute>
	    <attribute>
	      <description>
	        The max number of page numbers the control will generate.
	        Defaults to five. This attribute takes an OGNL expression.
	      </description>
	      <name>numSpan</name>
	      <required>false</required>
	      <rtexprvalue>false</rtexprvalue>
	      <type>java.lang.Integer</type>
	    </attribute>
	    <attribute>
	      <description>
	        Whether to show the "first" and "last" pagination controls.
	        Defaults to true.
	      </description>
	      <name>showFirstAndLast</name>
	      <required>false</required>
	      <rtexprvalue>false</rtexprvalue>
	      <type>java.lang.Boolean</type>
	    </attribute>
	    <attribute>
	        <description>
	            Define the starting number to be used as tabindex in displayed anchors
	        </description>
	        <name>startTabIndex</name>
	        <required>false</required>
	        <rtexprvalue>false</rtexprvalue>
	        <type>java.lang.Integer</type>
	    </attribute>
	     <attribute>
	        <description>
	            Define the starting number to be used as tabindex in displayed anchors
	        </description>
	        <name>isAjax</name>
	        <required>true</required>
	        <rtexprvalue>false</rtexprvalue>
	        <type>java.lang.Boolean</type>
	    </attribute>
	     <attribute>
	        <description>
	            if isAjax is true then required a div to set the html value.
	        </description>
	        <name>divId</name>
	        <required>false</required>
	        <rtexprvalue>false</rtexprvalue>
	        <type>java.lang.String</type>
	    </attribute>
	    <attribute>
	        <description>
	           Whether to show the my userlist format in the myUserList modal - pagination controls.
	           <!-- <<< for first and >>> for the end -->
			   Defaults to true.
	        </description>
	        <name>showMyUserFormat</name>
	        <required>false</required>
	        <rtexprvalue>false</rtexprvalue>
	        <type>java.lang.Boolean</type>
	    </attribute>
	    <attribute>
	        <description>
	           The total number of results
	           <!-- <<< for first and >>> for the end -->
			   Defaults to null.
	        </description>
	        <name>totalResults</name>
	        <required>false</required>
	        <rtexprvalue>false</rtexprvalue>
	        <type>java.lang.Integer</type>
	    </attribute>
	    <example>
	      <![CDATA[<xpedx:flexpagectl currentPage='3' endPage='6' urlSpec="?page={0}" />]]>
	    </example>
  </tag>
	<tag>
	    <description>
	      Generates a pagination control fragment.
	    </description>
	    <name>pagectl</name>
	    <tag-class>com.sterlingcommerce.xpedx.webchannel.common.XPEDXPaginationTag</tag-class>
	    <body-content>empty</body-content>
	    <attribute>
	      <description>
	        The number of the current page. Control will suppress the link
	        for this page. This attribute takes an OGNL expression.
	      </description>
	      <name>currentPage</name>
	      <required>true</required>
	      <rtexprvalue>false</rtexprvalue>
	      <type>java.lang.String</type>
	    </attribute>
	    <attribute>
	      <description>
	        The number of the last page of the pageset, if available. If empty or
	        missing this is interpreted as meaning that there are more pages, but
	        the number is unknown. This attribute takes an OGNL expression.
	      </description>
	      <name>lastPage</name>
	      <required>false</required>
	      <rtexprvalue>false</rtexprvalue>
	      <type>java.lang.String</type>
	    </attribute>
	    <attribute>
	      <description>
	        A java.text.MessageFormat template for the url to be generated to
	        request a specified page. Tag will replace "{0}" with new page
	        number to generate URL. This attribute takes an OGNL expression.
	      </description>
	      <name>urlSpec</name>
	      <required>true</required>
	      <rtexprvalue>false</rtexprvalue>
	      <type>java.lang.String</type>
	    </attribute>
	    <attribute>
	      <description>
	        CSS class for the bounding html object generated for this
	        control. This is used for binding to CSS rules.
	      </description>
	      <name>cssClass</name>
	      <required>false</required>
	      <rtexprvalue>false</rtexprvalue>
	      <type>java.lang.String</type>
	    </attribute>
	    <attribute>
	      <description>
	        CSS class for the bounding html object generated for this
	        control. This is used for binding to CSS rules.
	      </description>
	      <name>id</name>
	      <required>false</required>
	      <rtexprvalue>false</rtexprvalue>
	      <type>java.lang.String</type>
	    </attribute>
	    <attribute>
	      <description>
	        Generates a control based on the assumption that there is a next page
	        but the total number of pages is unknown. Defaults to false. If this
	        value is set to true then the value of lastPage is ignored. If this
	        value
	        is false and the lastPage is undefined, then no control is generated.
	        This attribute takes an OGNL expression.
	      </description>
	      <name>isLastUnknown</name>
	      <required>false</required>
	      <rtexprvalue>false</rtexprvalue>
	      <type>java.lang.Boolean</type>
	    </attribute>
	    <attribute>
	      <description>
	        The max number of page numbers the control will generate.
	        Defaults to five. This attribute takes an OGNL expression.
	      </description>
	      <name>numSpan</name>
	      <required>false</required>
	      <rtexprvalue>false</rtexprvalue>
	      <type>java.lang.Integer</type>
	    </attribute>
	    <attribute>
	      <description>
	        Whether to show the "first" and "last" pagination controls.
	        Defaults to true.
	      </description>
	      <name>showFirstAndLast</name>
	      <required>false</required>
	      <rtexprvalue>false</rtexprvalue>
	      <type>java.lang.Boolean</type>
	    </attribute>
	    <attribute>
	        <description>
	            Define the starting number to be used as tabindex in displayed anchors
	        </description>
	        <name>startTabIndex</name>
	        <required>false</required>
	        <rtexprvalue>false</rtexprvalue>
	        <type>java.lang.Integer</type>
	    </attribute>
	     <attribute>
	        <description>
	            Define the starting number to be used as tabindex in displayed anchors
	        </description>
	        <name>isAjax</name>
	        <required>true</required>
	        <rtexprvalue>false</rtexprvalue>
	        <type>java.lang.Boolean</type>
	    </attribute>
	     <attribute>
	        <description>
	            if isAjax is true then required a div to set the html value.
	        </description>
	        <name>divId</name>
	        <required>false</required>
	        <rtexprvalue>false</rtexprvalue>
	        <type>java.lang.String</type>
	    </attribute>
	    <attribute>
	        <description>
	           Whether to show the my userlist format in the myUserList modal - pagination controls.
	           <!-- <<< for first and >>> for the end -->
			   Defaults to true.
	        </description>
	        <name>showMyUserFormat</name>
	        <required>false</required>
	        <rtexprvalue>false</rtexprvalue>
	        <type>java.lang.Boolean</type>
	    </attribute>
	    <example>
	      <![CDATA[<xpedx:pagectl currentPage='3' endPage='6' urlSpec="?page={0}" />]]>
	    </example>
  </tag>
  <tag>
    <description>
      Marks a sortable column in a table. It should be placed in the header tag
      for any column that is sortable. Must be contained within a swc:sortctl
      tag. Should wrap the column header text.

      The default rendering of this control is "Comergent style". All sortable
      columns will be anchors. Sort direction will be displayed in the column
      header of the sorted column. Clicking on the sorted column will reverse
      direction of the sort. Clicking on any other column will change the
      current sorted column, but preserve direction.
    </description>
    <name>sortable</name>
    <tag-class>com.sterlingcommerce.xpedx.webchannel.common.XPEDXSortableTag</tag-class>
    <body-content>scriptless</body-content>
    <attribute>
      <description>
        The name of the sort field for this column.
      </description>
      <name>fieldname</name>
      <required>true</required>
      <type>java.lang.String</type>
    </attribute>
    <example>
      <![CDATA[
      <th><swc:sortable fieldname="col1">Column 1</swc:sortable></th>
      ]]>
    </example>
  </tag>
  <tag>
    <description>
      A sort control builds html elements to manage the order of
      presentation of a table. This is a relatively simple sort model. Tables
      can be sorted by one single field either in ascending or descending order
      according to the field's "natural" ordering.

      The sortctl element should contain the affected table. Columns that are
      to be wrapped should be marked by placing an swc:sortable tag in the
      header element for the column.
    </description>
    <name>sortctl</name>
    <tag-class>com.sterlingcommerce.xpedx.webchannel.common.XPEDXSortingTag</tag-class>
    <body-content>scriptless</body-content>
    <attribute>
      <description>
        The sortfield attribute identifies the current sort field.
      </description>
      <name>sortField</name>
      <required>true</required>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <description>
        The css class string to be applied to the sort field header when sorting in
        the ascending direction.
        Defaults to "sort-field-up".
      </description>
      <name>sortFieldUpClass</name>
      <required>false</required>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <description>
        The css class to be applied to the sort field header when sorting in the
        descending direction.
        Defaults to "sort-field-down".
      </description>
      <name>sortFieldDownClass</name>
      <required>false</required>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <description>
        Specifies the direction of sort currently applied.
        This is a symbol completely under the control of the application. It
        should correspond with either the "down" or the "up" symbols.
      </description>
      <name>sortDirection</name>
      <required>true</required>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <description>
        The string meaning the direction down to be passed to the server.
      </description>
      <name>down</name>
      <required>true</required>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <description>
        The string meaning the direction up to be passed to the server.
      </description>
      <name>up</name>
      <required>true</required>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <description>
        A java.text.MessageFormat template for the url to be generated to
        re-sort the table. Tag will replace "{0}" with field name and "{1}" with
        sort direction.
      </description>
      <name>urlSpec</name>
      <required>true</required>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <description>
        CSS class for the bounding html object generated for this
        control.  This is used for binding to CSS rules.
      </description>
      <name>cssClass</name>
      <required>false</required>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <description>
        ID attribute for the bounding html object generated for this
        control.  This is used for binding to CSS rules.
      </description>
      <name>id</name>
      <required>false</required>
      <type>java.lang.String</type>
    </attribute>
     <attribute>
	        <description>
	            Define the starting number to be used as tabindex in displayed anchors
	        </description>
	        <name>isAjax</name>
	        <required>true</required>
	        <rtexprvalue>false</rtexprvalue>
	        <type>java.lang.Boolean</type>
	    </attribute>
	     <attribute>
	        <description>
	            if isAjax is true then required a div to set the html value.
	        </description>
	        <name>divId</name>
	        <required>false</required>
	        <rtexprvalue>false</rtexprvalue>
	        <type>java.lang.String</type>
	    </attribute>
    <example>
      <![CDATA[
      <swc:sortctl sortField="%{orderByAttribute}" sortDirection="%{orderDesc}"
        down="Y" up="N" urlSpec="%{#draftOrderListSortURL}">
        ...
      </swc:sortctl>
      ]]>
    </example>
  </tag>

</taglib>
